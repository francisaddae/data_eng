name: GitHub Continuous Integration

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

permissions:
  checks: write
  contents: write



jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_NAME: ${{ secrets.AWS_ACCESS_NAME }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      GITHUB_PULL_REQUEST_BASE_REF: 'main'
      # SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      # SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
      # SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      # SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
      # SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE}}
      # SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      # SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}


    steps:

      - name: Checkout branch
        uses: actions/checkout@v4.1.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_USER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Build and push Docker images
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USER_NAME }}/data_eng:latest

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8

      # Install your linters here
      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          auto_fix: true
          black: true
          black_auto_fix: true
          flake8: true
          flake8_auto_fix: true
          max-line-length: "100"

      #SQL Fluff
      - name: SQL Fluff
        uses: yu-iskw/action-sqlfluff@v3
        id: lint-sql
        with:
          github_base_ref: "main"

      # Install dbt
      - name: Install dbt and dependencies
        run: |
          pip install dbt-core==1.6.0 dbt-snowflake dbt-duckdb dbt-duckdb[glue]
          export DBT_PROFILES_DIR=$PWD

      #Building dbt models
      - name: Deploy & test Models (CI)
        working-directory: ./data_modeling/
        env:
          DBT_PROFILES_DIR: ./
        run: |
          export DBT_PROFILES_DIR=$PWD
          dbt debug --target prd
          dbt --no-version-check deps
          dbt build --target prd --exclude prod_articles
